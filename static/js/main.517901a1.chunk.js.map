{"version":3,"sources":["components/ContactForm/ContactForm.module.scss","components/ContactList/ContactList.module.scss","components/Button/Button.module.scss","components/Section/Section.module.scss","components/Button/Button.js","components/ContactList/ContactList .js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","Button","onClick","id","children","className","styles","ContactList","visibleName","map","name","number","item","Filter","onChange","type","pattern","title","required","ContactForm","state","e","this","setState","currentTarget","value","props","filter","addContacts","ContactForm__input","handleName","bind","handleNumber","ContactForm__button","cleanInput","Component","Section","App","contacts","toLowerCase","searchContact","prevState","uuidv4","filteredName","deleteFriend","PrevState","normolizedName","contact","find","console","log","normolizedFilter","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.517901a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__2CUcA\",\"ContactForm__input\":\"ContactForm_ContactForm__input__3Go3i\",\"ContactForm__button\":\"ContactForm_ContactForm__button__30ZgL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__39qi0\",\"item\":\"ContactList_item__WCH4U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__contacts\":\"Button_title__contacts__19H80\",\"Button\":\"Button_Button__248iW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title__contacts\":\"Section_title__contacts__1vSAT\",\"Section\":\"Section_Section__24Hp-\"};","import PropTypes from 'prop-types'\r\nimport styles from './Button.module.scss'\r\n\r\nconst Button =( {onClick, id, children})=>{\r\n    return(\r\n        <button className={styles.Button} onClick={()=>onClick(id)}>{children}</button>\r\n    )\r\n}\r\n\r\nButton.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n    children: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Button;","import PropTypes from 'prop-types'\r\nimport Button from '../Button'\r\nimport styles from './ContactList.module.scss'\r\n\r\nconst ContactList = ({visibleName, onClick}) =>{\r\n\r\n    return(\r\n    <ul className={styles.ContactList}>\r\n        {visibleName.map(({name, id, number})=><li className={styles.item}key={id}>{name}:{number} <Button onClick={onClick} id={id}>Delete</Button> </li>)}\r\n    </ul>\r\n    )\r\n}\r\n\r\n\r\nContactList.propTypes = {\r\n    visibleName: PropTypes.array.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default ContactList","import PropTypes from 'prop-types'\r\nimport styles from './Filter.module.scss'\r\n\r\nconst Filter = ({onChange}) =>{\r\n    return(\r\n        <div>\r\n            <p>Find contacts by name</p>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                required\r\n                onChange={onChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter ","\r\nimport  React, {Component} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styles from './ContactForm.module.scss'\r\n\r\nclass ContactForm extends Component {\r\n    \r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    handleName (e) {\r\n        this.setState({name: e.currentTarget.value})\r\n}\r\n\r\n    handleNumber(e){\r\n        this.setState({number: e.currentTarget.value})\r\n    }\r\n\r\n    cleanInput(){\r\n        this.setState({name: '', number: ''});\r\n    }\r\n\r\n\r\n    render(){\r\n    const {name, number} = this.state\r\n    const {filter, addContacts}= this.props\r\n\r\n    return(\r\n        <div className={styles.ContactForm}>\r\n            <label className={styles.ContactForm__input}>\r\n                Name\r\n                <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                    value={name}\r\n                    onChange={this.handleName.bind(this)}\r\n                />\r\n            </label>\r\n            <label className={styles.ContactForm__input}>\r\n                Number\r\n                <input\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    value={number}\r\n                    required\r\n                    onChange={this.handleNumber.bind(this)}\r\n                />\r\n            </label>\r\n\r\n            <button className={styles.ContactForm__button} type=\"submit\" value={filter} onClick={()=>addContacts(name, number, this.cleanInput())}>\r\n            Add contact\r\n            </button>\r\n        </div>\r\n    )\r\n    }\r\n\r\n}\r\n\r\n\r\nContactForm.propTypes = {\r\n    filter: PropTypes.string.isRequired,\r\n    addContacts: PropTypes.func.isRequired,\r\n}\r\nexport default ContactForm","import PropTypes from 'prop-types';\r\nimport styles from'./Section.module.scss';\r\n\r\nconst Section =(props)=>{\r\n    return(\r\n        <div className={styles.Section}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.array.isRequired,\r\n}\r\nexport default Section","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactList from \"./components/ContactList\";\r\nimport Filter from \"./components/Filter\";\r\nimport ContactForm from \"./components/ContactForm\";\r\nimport Section from \"./components/Section\";\r\nimport \"./styles/shared.scss\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContacts = (name, number) => {\r\n\r\n    const normolizedName = name.toLowerCase();\r\n    const messageAlert = `${name} is already in contacts`;\r\n    \r\n    if (this.searchContact(name))\r\n      this.setState((prevState) => ({\r\n        contacts: [\r\n          ...prevState.contacts,\r\n          { name: name, id: uuidv4(), number: number },\r\n        ],\r\n      }));\r\n      \r\n  };\r\n\r\n  searchContact(name) {\r\n    const { contacts } = this.state;\r\n    const normolizedName = name.toLowerCase();\r\n    const messageAlert = `${name} is already in contacts`;\r\n    const contact = contacts.find(({name})=>name=== normolizedName)\r\n    console.log(contact);\r\n    // for (let i = 0; i < contacts.length; i += 1) {\r\n    //   if (contacts[i].name === normolizedName) {\r\n    //     alert(messageAlert);\r\n    //     return false;\r\n    //   }\r\n    // }\r\n    // return true;\r\n  }\r\n\r\n  filteredName = (e) => {\r\n    this.setState({ filter: e.currentTarget.value });\r\n  };\r\n\r\n  deleteFriend = (id) => {\r\n    this.setState((PrevState) => ({\r\n      contacts: PrevState.contacts.filter((item) => item.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const normolizedFilter = filter.toLowerCase();\r\n\r\n    const visibleName = contacts.filter((item) =>\r\n      item.name.toLowerCase().includes(normolizedFilter)\r\n    );\r\n\r\n    return (\r\n      <>\r\n        <Section>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm filter={filter} addContacts={this.addContacts} />\r\n          <h2 className=\"title__contacts\">Contacts</h2>\r\n          <Filter onChange={this.filteredName} />\r\n          <ContactList visibleName={visibleName} onClick={this.deleteFriend} />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}